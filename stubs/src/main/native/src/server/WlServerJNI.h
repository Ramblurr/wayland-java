/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_freedesktop_wayland_server_WlServerJNI */

#ifndef _Included_org_freedesktop_wayland_server_WlServerJNI
#define _Included_org_freedesktop_wayland_server_WlServerJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createListener
 * Signature: (Lorg/freedesktop/wayland/server/Listener;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createListener
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    removeListener
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_removeListener
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerListenerHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerListenerHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addShmFormat
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addShmFormat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    initShm
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_initShm
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getEventLoop
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getEventLoop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addSocket
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addSocket
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    terminate
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_terminate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    run
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_run
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    flushClients
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_flushClients
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getSerial
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getSerial
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    nextSerial
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_nextSerial
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createDisplay
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createDisplay
  (JNIEnv *, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_destroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addDisplayDestroyListener
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addDisplayDestroyListener
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerFDHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerFDHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerTimerHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerTimerHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerSignalHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerSignalHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerIdleHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerIdleHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addFileDescriptor
 * Signature: (JIILorg/freedesktop/wayland/server/EventLoop/FileDescriptorEventHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addFileDescriptor
  (JNIEnv *, jclass, jlong, jint, jint, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    updateFileDescriptor
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_updateFileDescriptor
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addTimer
 * Signature: (JLorg/freedesktop/wayland/server/EventLoop/TimerEventHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addTimer
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    updateTimer
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_updateTimer
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addSignal
 * Signature: (JILorg/freedesktop/wayland/server/EventLoop/SignalEventHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addSignal
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addIdle
 * Signature: (JLorg/freedesktop/wayland/server/EventLoop/IdleHandler;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addIdle
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    remove
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_remove
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    check
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_check
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    dispatch
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_dispatch
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    dispatchIdle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_dispatchIdle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createEventLoop
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createEventLoop
  (JNIEnv *, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getFileDescriptor
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getFileDescriptor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addEventLoopDestroyListener
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addEventLoopDestroyListener
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createGlobal
 * Signature: (JJILorg/freedesktop/wayland/server/Global;)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createGlobal
  (JNIEnv *, jclass, jlong, jlong, jint, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    destroyGlobal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_destroyGlobal
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    registerBindClientHandler
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_registerBindClientHandler
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createResource
 * Signature: (JJII)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createResource
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getId
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getId
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getVersion
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getVersion
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addResourceDestroyListener
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addResourceDestroyListener
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    destroyResource
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_destroyResource
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    postEvent
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_postEvent
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    postError
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_postError
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getClient
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getClient
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getImplementation
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getImplementation
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    setDispatcher
 * Signature: (JLjava/lang/Object;)J
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_setDispatcher
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createClient
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createClient
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    flush
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_flush
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    addClientDestroyListener
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_addClientDestroyListener
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    destroyClient
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_destroyClient
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getDisplay
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getDisplay
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    createShmBuffer
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_createShmBuffer
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    beginAccess
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_beginAccess
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    endAccess
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_endAccess
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getData
 * Signature: (JJ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getData
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getStride
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getStride
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getFormat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getFormat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getWidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getWidth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getHeight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getHeight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    get
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_get
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_server_WlServerJNI
 * Method:    getDataAsPointer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_server_WlServerJNI_getDataAsPointer
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
