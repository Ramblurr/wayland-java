/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_freedesktop_wayland_util_WlUtilJNI */

#ifndef _Included_org_freedesktop_wayland_util_WlUtilJNI
#define _Included_org_freedesktop_wayland_util_WlUtilJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    register
 * Signature: (Ljava/lang/Class;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_register
  (JNIEnv *, jclass, jclass);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    createArguments
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_createArguments
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    destroyArgument
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_destroyArgument
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getIArgument
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getIArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getUArgument
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getUArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getFArgument
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getFArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getSArgument
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getSArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getOArgument
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getOArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getNArgument
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getNArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getAArgument
 * Signature: (JI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getAArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getHArgument
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getHArgument
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    setIUNHArgument
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_setIUNHArgument
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    setOArgument
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_setOArgument
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    setFArgument
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_setFArgument
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    setSArgument
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_setSArgument
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    setAArgument
 * Signature: (JILjava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_setAArgument
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    initMessage
 * Signature: (JILjava/lang/String;Ljava/lang/String;[J)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_initMessage
  (JNIEnv *, jclass, jlong, jint, jstring, jstring, jlongArray);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    createInterface
 * Signature: (Ljava/lang/String;IJIJI)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_createInterface
  (JNIEnv *, jclass, jstring, jint, jlong, jint, jlong, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_getName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    allocateMessages
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_allocateMessages
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_freedesktop_wayland_util_WlUtilJNI
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_freedesktop_wayland_util_WlUtilJNI_free
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
